//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My_Service
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Service : object
    {
        
        private string AutorField;
        
        private string CategoriaField;
        
        private int IdField;
        
        private decimal PrecoField;
        
        private string TituloField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Autor
        {
            get
            {
                return this.AutorField;
            }
            set
            {
                this.AutorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Categoria
        {
            get
            {
                return this.CategoriaField;
            }
            set
            {
                this.CategoriaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Preco
        {
            get
            {
                return this.PrecoField;
            }
            set
            {
                this.PrecoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Titulo
        {
            get
            {
                return this.TituloField;
            }
            set
            {
                this.TituloField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Categorias_", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Categorias_ : object
    {
        
        private string CategoriaField;
        
        private int ID_categoriaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Categoria
        {
            get
            {
                return this.CategoriaField;
            }
            set
            {
                this.CategoriaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_categoria
        {
            get
            {
                return this.ID_categoriaField;
            }
            set
            {
                this.ID_categoriaField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="My_Service.IService")]
    public interface IService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAll", ReplyAction="http://tempuri.org/IService/GetAllResponse")]
        My_Service.Service[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAll", ReplyAction="http://tempuri.org/IService/GetAllResponse")]
        System.Threading.Tasks.Task<My_Service.Service[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOne", ReplyAction="http://tempuri.org/IService/GetOneResponse")]
        My_Service.Service GetOne(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOne", ReplyAction="http://tempuri.org/IService/GetOneResponse")]
        System.Threading.Tasks.Task<My_Service.Service> GetOneAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Inserir", ReplyAction="http://tempuri.org/IService/InserirResponse")]
        string Inserir(My_Service.Service livro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Inserir", ReplyAction="http://tempuri.org/IService/InserirResponse")]
        System.Threading.Tasks.Task<string> InserirAsync(My_Service.Service livro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Update", ReplyAction="http://tempuri.org/IService/UpdateResponse")]
        string Update(int id, My_Service.Service livro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Update", ReplyAction="http://tempuri.org/IService/UpdateResponse")]
        System.Threading.Tasks.Task<string> UpdateAsync(int id, My_Service.Service livro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Delete", ReplyAction="http://tempuri.org/IService/DeleteResponse")]
        string Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Delete", ReplyAction="http://tempuri.org/IService/DeleteResponse")]
        System.Threading.Tasks.Task<string> DeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCategorias", ReplyAction="http://tempuri.org/IService/GetCategoriasResponse")]
        My_Service.Categorias_[] GetCategorias();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCategorias", ReplyAction="http://tempuri.org/IService/GetCategoriasResponse")]
        System.Threading.Tasks.Task<My_Service.Categorias_[]> GetCategoriasAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public interface IServiceChannel : My_Service.IService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<My_Service.IService>, My_Service.IService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceClient() : 
                base(ServiceClient.GetDefaultBinding(), ServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), ServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public My_Service.Service[] GetAll()
        {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<My_Service.Service[]> GetAllAsync()
        {
            return base.Channel.GetAllAsync();
        }
        
        public My_Service.Service GetOne(int id)
        {
            return base.Channel.GetOne(id);
        }
        
        public System.Threading.Tasks.Task<My_Service.Service> GetOneAsync(int id)
        {
            return base.Channel.GetOneAsync(id);
        }
        
        public string Inserir(My_Service.Service livro)
        {
            return base.Channel.Inserir(livro);
        }
        
        public System.Threading.Tasks.Task<string> InserirAsync(My_Service.Service livro)
        {
            return base.Channel.InserirAsync(livro);
        }
        
        public string Update(int id, My_Service.Service livro)
        {
            return base.Channel.Update(id, livro);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAsync(int id, My_Service.Service livro)
        {
            return base.Channel.UpdateAsync(id, livro);
        }
        
        public string Delete(int id)
        {
            return base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAsync(int id)
        {
            return base.Channel.DeleteAsync(id);
        }
        
        public My_Service.Categorias_[] GetCategorias()
        {
            return base.Channel.GetCategorias();
        }
        
        public System.Threading.Tasks.Task<My_Service.Categorias_[]> GetCategoriasAsync()
        {
            return base.Channel.GetCategoriasAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:61917/Service.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IService,
        }
    }
}
